pipeline {
    agent any 
      tools 
        {
          maven 'Apache Maven 3.8.6'
        }

      // Set environment variables for Key Vault access
            environment {
                    KEYVAULT_NAME = 'poc-data-key-vault'
                    KEYVAULT_URL = "https://poc-data-key-vault.vault.azure.net/"
                 }
    stages{

       // stage (' Setup') {
        //    steps {
                // Download and install the Key Vault JCA provider
               // sh 'wget https://mvnrepository.com/artifact/com.azure/azure-security-keyvault-jca/2.7.1/azure-security-keyvault-jca-2.7.1'
             //   sh 'mv azure-security-keyvault-jca-2.7.1 $JAVA_HOME/jdk-11.0.16.1/lib'      
           // }
       // }
 
        stage('Build') {
            steps {
                sh 'mvn clean package'
            }
        }
 
        stage('Sign') {
            steps { 
              
                // Sign JAR file using retrieved certificate and alias
                    sh 'jarsigner  -keystore $JAVA_HOME/jdk-11.0.16.1/lib/azure-security-keyvault-jca-2.8.0.jar -storetype AzureKeyVault \
                       -signedjar signerjar.jar D:/New_CodeSign/jarsigner/jenkins-example-1.0-SNAPSHOT.jar TestSSC \
                       -verbose  -storepass "" \
                       -J-Dazure.keyvault.uri="https://poc-data-key-vault.vault.azure.net/" \
                       -J-Dazure.keyvault.tenant-id=8c3dad1d-b6bc-4f8b-939b-8263372eced6 \
                       -J-Dazure.keyvault.client-id=a2220dff-d6a3-4728-99a7-6083cdaf8937 \
                       -J-Dazure.keyvault.client-secret=GDS8Q~X5.WjXNp0f1Y.-5SuROlhX5KGHSncXcdiK'

               }
            }
         }
}
    
